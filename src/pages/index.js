import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import { useEffect, useState } from 'react'
import * as Papa from 'papaparse';
import { StatsGroup } from '@/components/Stat'
import { createStyles } from '@mantine/core';
import SalaryHistogram from '@/components/Histogram';
import SalaryTable from '@/components/Table';

const inter = Inter({ subsets: ['latin'] })

const cleanNum = (val) => {
  if (!Number.isInteger(val)) {
    return parseFloat(val.replace(/,/g, ''))
  }
  return val
}



const useStyles = createStyles((theme) => ({
  pageContainer: {
    padding: '2rem'
  },
  pageHeader: {
    textAlign: 'center',
    fontSize: '24px'
  }
}));

function calcMed(data) {
  const length = data.length
  let med;
  if (length%2 == 0) {
    med = (data[Math.floor(length/2)]["SY2122"]+data[Math.floor(length/2)-1]["SY2122"])/parseFloat(2)
  } else {
    med = data[Math.floor(length/2)]["SY2122"]
  }
  return med.toLocaleString(undefined, {style: 'currency', currency:"USD", maximumFractionDigits:0, currencyDisplay:"symbol"})
}

function calcAvg(data) {
  let total = 0
  data.forEach((row) => {
    total += parseFloat(row["SY2122"])
  })
  return (total/parseFloat(data.length)).toLocaleString(undefined, {style: 'currency', currency:"USD", maximumFractionDigits:0, currencyDisplay:"symbol"})
}

function calcStd(data) {
  let total = 0
  data.forEach((row) => {
    total += parseFloat(row["SY2122"])
  })
  let avg = total/parseFloat(data.length)
  total = 0
  data.forEach((row) => {
    total += Math.pow(parseFloat(row["SY2122"])-avg,2)
  })
  return Math.sqrt(total/parseFloat(data.length)).toLocaleString(undefined, {style: 'currency', currency:"USD", maximumFractionDigits:0, currencyDisplay:"symbol"})
}

export default function Home() {
  const [salaryData, setSalaryData] = useState(null);
  const styles = useStyles()
  useEffect(() => {
    const loadEmploymentData = () => {
      fetch('./K12AllStaffSalaryData.csv')
        .then(response => response.text())
        .then(responseText => {
          const parsed = Papa.parse(responseText, { header: true, dynamicTyping: true });
          const cleanedData = []
          parsed.data.forEach((row) => {
            const cleanedRow = {
              DistrictName: row["DistrictName"].trim(),
              Name: row["Name"].trim(),
              Duty: row["Duty"].trim(),
              SY2122: cleanNum(row["SY2021-22"]),
            }
            if (!isNaN(cleanedRow["SY2122"])){
              cleanedData.push(cleanedRow)
            }
          })
          setSalaryData(cleanedData)
        });
    }
    loadEmploymentData()
  }, [])
  
  let med;
  let avg;
  let std;
  if (salaryData) {
    med = calcMed(salaryData)
    avg = calcAvg(salaryData)
    std = calcStd(salaryData)
  }
  
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.classes.pageContainer}>
        <div>
          <h1 className={styles.classes.pageHeader}>Washinton Teacher Salaries 2021-2022</h1>
          <div>
            {salaryData && <StatsGroup data={[
              {stats: med, title: "Median Salary", description: "" }, 
              {stats: avg, title: "Average Salary", description: "" },
              {stats: std, title: "Standard Deviation", description: "" }
              ]} />
            }
          </div>
          <div>
            {salaryData && <SalaryHistogram data={salaryData} width={800} height={400} />}
          </div>

          <div>
            {salaryData && <SalaryTable data={salaryData} />}
          </div>

        </div>
      </main>
    </>
  )
}


